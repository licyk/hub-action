name: Sync HuggingFace Repo To ModelScope

on:
    workflow_dispatch:
        inputs:
            hf_repo_id:
                description: HuggingFace 仓库 ID
                required: true
                type: string
            hf_repo_type:
                description: HuggingFace 仓库类型
                required: true
                type: string
                default: model
            hf_file_include:
                description: 指定下载 HuggingFace 仓库的文件 (使用通配符描述)
                required: false
                type: string
            ms_repo_id:
                description: ModelScope 仓库 ID
                required: true
                type: string
            ms_repo_type:
                description: ModelScope 仓库类型
                required: true
                type: string
                default: model

jobs:
    Sync-HF-To-MS:
        runs-on: ubuntu-latest
        steps:
            - name: Config HuggingFace / ModelScope Python Library
              shell: bash
              run: |
                pip install "huggingface_hub[cli]" modelscope --break-system-package

            - name: Sync HuggingFace Repo To ModelScope Repo
              shell: bash
              env:
                HF_TOKEN: ${{ secrets.HF_TOKEN }}
                MODELSCOPE_API_TOKEN: ${{ secrets.MODELSCOPE_API_TOKEN }}
              run: |
                echo "下载 HuggingFace 仓库 ${{ inputs.hf_repo_id }} (类型: ${{ inputs.hf_repo_type }}) 到 ${{ github.workspace }}"
                if [[ ! -z "${{ inputs.hf_file_include }}" ]]; then
                    huggingface-cli download "${{ inputs.hf_repo_id }}" --repo-type "${{ inputs.hf_repo_type }}" --local-dir "${{ github.workspace }}" --include "${{ inputs.hf_file_include }}"
                else
                    huggingface-cli download "${{ inputs.hf_repo_id }}" --repo-type "${{ inputs.hf_repo_type }}" --local-dir "${{ github.workspace }}"
                fi
                echo "下载仓库完成"

                echo "清理 HuggingFace 缓存文件夹"
                rm -rf "${{ github.workspace }}/.cache"

                echo "上传 ${{ github.workspace }} 到 ModelScope 仓库 ${{ inputs.ms_repo_id }} (类型: ${{ inputs.ms_repo_type }})"
                modelscope upload "${{ inputs.ms_repo_id }}" "${{ github.workspace }}" . --repo-type "${{ inputs.ms_repo_type }}"
                echo "上传仓库完成"